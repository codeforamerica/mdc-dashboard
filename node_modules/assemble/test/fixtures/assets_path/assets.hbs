<p>Examples to test the "relative" and "assets" variables, and to show how they work</p>

{{#assets_nested}}
<h1>"Public" Folder</h1>
<p>Public (assets) folder is in the project root</p>
<pre>
originalAssets: {{originalAssets}}
assets: {{assets}}
dest: {{dest}}
src: {{src}}
assets_nested: {
  options: {assets: 'test/actual/public'},
  files: {'test/actual/assets_nested.html': ['test/files/assets.hbs']}
},
</pre>
{{/assets_nested}}


{{#assets_base}}
<h1>Same Folder</h1>
<p>Assets folder is in the same dir as dest files.</p>
<pre>
assets_base: {
  options: {assets: 'test/actual'},
  files: {'test/actual/assets_base.html': ['test/files/assets.hbs']}
},
</pre>
{{/assets_base}}


{{#assets_trailing_slash}}
<h1>Project Root</h1>
<p>Assets folder is in the project root, which is not the same dir as dest files.</p>
<pre>
assets_trailing_slash: {
  options: {assets: ''},
  files: {'test/actual/assets_trailing_slash.html': ['test/files/assets.hbs']}
}
</pre>
{{/assets_trailing_slash}}


{{#assets_dot_slash}}
<h1>Project Root With Slash</h1>
<p>Assets folder is in the project rool, which is not the same dir as the dest files.</p>
<pre>
assets_dot_slash: {
  options: {assets: './'},
  files: {'test/actual/assets_dot_slash.html': ['test/files/assets.hbs']}
}
</pre>
{{/assets_dot_slash}}


{{#assets_blank_path}}
<h1>Same Folder With Slash</h1>
<p>Assets folder is in the same dir as dest files</p>
<pre>
assets_blank_path: {
  options: {assets: 'test/actual'},
  files: {'test/actual/assets_blank_path.html': ['test/files/assets.hbs']}
}
</pre>
{{/assets_blank_path}}